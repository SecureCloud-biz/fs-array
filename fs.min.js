(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):global.fs=factory()})(this,function(){"use strict";const fs=require("fs");const path=require("path");const{promisify:promisify}=require("util");const magic=require("magic-promises");const abs=(name=".",base=process.cwd())=>{if(path.isAbsolute(name))return name;if(!base||typeof base!=="string"){base=process.cwd()}return join(base,name)};const cat=name=>{const file=abs(name);const readFile=promisify(fs.readFile);return magic(readFile(file,"utf-8"))};const dir=name=>path.dirname(abs(name));const exists=name=>{const file=abs(name);const exists=promisify(fs.exists);return magic(exists(file))};const join=(...args)=>abs(path.join(...args));const list=name=>{const file=abs(name);const readDir=promisify(fs.readdir);return magic(readDir(file)).map(name=>join(file,name))};const mkdir=name=>{const file=abs(name);const realmkdir=promisify(fs.mkdir);return magic(file.split(path.sep).map((part,i,all)=>{return all.slice(0,i+1).join(path.sep)}).filter(Boolean).reduce((prom,path)=>{return prom.then(async()=>await exists(path)?path:realmkdir(path)).catch(err=>{}).then(()=>file)},Promise.resolve()))};const name=path.basename;const remove=name=>magic([abs(name)]).map(async file=>{if(file==="/")throw new Error("Cannot remove the root file");const stats=await stat(file);if(stats&&stats.isDirectory()){const files=await walk(file).map(remove);await list(file).map(remove);await promisify(fs.rmdir)(file).catch(err=>{});return file}await promisify(fs.unlink)(file).catch(err=>{});return file})[0];const stat=name=>{const file=abs(name);const lstat=promisify(fs.lstat);return magic(lstat(file)).catch(err=>{})};const walk=name=>{const file=abs(name);const deepper=async file=>{if((await stat(file)).isDirectory()){return walk(file)}return[file]};return list(file).map(deepper).reduce((all,arr)=>all.concat(arr),[])};const write=(name,body="")=>{const file=abs(name);const writeFile=promisify(fs.writeFile);return magic(writeFile(file,body,"utf-8"))};var fs$1={abs:abs,cat:cat,dir:dir,exists:exists,join:join,list:list,ls:list,mkdir:mkdir,name:name,read:cat,remove:remove,stat:stat,walk:walk,write:write};return fs$1});